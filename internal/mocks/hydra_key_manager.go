// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ory/hydra/jwk (interfaces: Manager)

// Package internal is a generated GoMock package.
package internal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	go_jose "github.com/square/go-jose"
)

// MockManager is a mock of Manager interface
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
}

// MockManagerMockRecorder is the mock recorder for MockManager
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// AddKey mocks base method
func (m *MockManager) AddKey(arg0 string, arg1 *go_jose.JsonWebKey) error {
	ret := m.ctrl.Call(m, "AddKey", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddKey indicates an expected call of AddKey
func (mr *MockManagerMockRecorder) AddKey(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddKey", reflect.TypeOf((*MockManager)(nil).AddKey), arg0, arg1)
}

// AddKeySet mocks base method
func (m *MockManager) AddKeySet(arg0 string, arg1 *go_jose.JsonWebKeySet) error {
	ret := m.ctrl.Call(m, "AddKeySet", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddKeySet indicates an expected call of AddKeySet
func (mr *MockManagerMockRecorder) AddKeySet(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddKeySet", reflect.TypeOf((*MockManager)(nil).AddKeySet), arg0, arg1)
}

// DeleteKey mocks base method
func (m *MockManager) DeleteKey(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "DeleteKey", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteKey indicates an expected call of DeleteKey
func (mr *MockManagerMockRecorder) DeleteKey(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteKey", reflect.TypeOf((*MockManager)(nil).DeleteKey), arg0, arg1)
}

// DeleteKeySet mocks base method
func (m *MockManager) DeleteKeySet(arg0 string) error {
	ret := m.ctrl.Call(m, "DeleteKeySet", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteKeySet indicates an expected call of DeleteKeySet
func (mr *MockManagerMockRecorder) DeleteKeySet(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteKeySet", reflect.TypeOf((*MockManager)(nil).DeleteKeySet), arg0)
}

// GetKey mocks base method
func (m *MockManager) GetKey(arg0, arg1 string) (*go_jose.JsonWebKeySet, error) {
	ret := m.ctrl.Call(m, "GetKey", arg0, arg1)
	ret0, _ := ret[0].(*go_jose.JsonWebKeySet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKey indicates an expected call of GetKey
func (mr *MockManagerMockRecorder) GetKey(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockManager)(nil).GetKey), arg0, arg1)
}

// GetKeySet mocks base method
func (m *MockManager) GetKeySet(arg0 string) (*go_jose.JsonWebKeySet, error) {
	ret := m.ctrl.Call(m, "GetKeySet", arg0)
	ret0, _ := ret[0].(*go_jose.JsonWebKeySet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKeySet indicates an expected call of GetKeySet
func (mr *MockManagerMockRecorder) GetKeySet(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeySet", reflect.TypeOf((*MockManager)(nil).GetKeySet), arg0)
}
